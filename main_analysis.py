#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script principal d'analyse utilisant uniquement import.py, function.py, et download.py
"""

import os
import sys
sys.path.append(os.path.dirname(__file__))

# 1. V√©rification des imports et de l'environnement
print("="*50)
print("√âTAPE 1: V√©rification de l'environnement")
print("="*50)
import subprocess
result = subprocess.run([sys.executable, "import.py"], capture_output=True, text=True)
print(result.stdout)
if result.stderr:
    print("Avertissements:", result.stderr)

# 2. Import des fonctions depuis function.py
print("\n" + "="*50)
print("√âTAPE 2: Import des fonctions d'analyse")
print("="*50)
from function import download_files
import pandas as pd
from datetime import datetime

# V√©rification des fichiers attendus avant t√©l√©chargement
today_date = datetime.today().date().strftime('%Y-%m-%d')
base_path = r"C:\Users\Moise\Downloads\Call-App\data"
expected_files = [
    f"Caris Health Agent - Femme PMTE  - APPELS PTME (created 2025-02-13) {today_date}.xlsx",
    f"Caris Health Agent - Enfant - APPELS OEV (created 2025-01-08) {today_date}.xlsx",
    f"Caris Health Agent - Femme PMTE  - Visite PTME (created 2025-02-13) {today_date}.xlsx",
    f"Caris Health Agent - Femme PMTE  - Ration & Autres Visites (created 2025-02-18) {today_date}.xlsx",
    f"Caris Health Agent - Enfant - Ration et autres visites (created 2022-08-29) {today_date}.xlsx",
    f"Caris Health Agent - Enfant - Visite Enfant (created 2025-07-30) {today_date}.xlsx",
]
missing_files = [f for f in expected_files if not os.path.exists(os.path.join(base_path, f))]

# 3. T√©l√©chargement des fichiers via download.py
print("\n" + "="*50)
print("√âTAPE 3: T√©l√©chargement des donn√©es CommCare")
print("="*50)
if missing_files:
    print(f"Fichiers manquants: {missing_files}")
    try:
        download_files()
        print("‚úÖ T√©l√©chargement termin√© avec succ√®s!")
    except Exception as e:
        print(f"‚ùå Erreur lors du t√©l√©chargement: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
else:
    print("‚úÖ Tous les fichiers sont d√©j√† pr√©sents, t√©l√©chargement ignor√©.")

# 4. Analyse des donn√©es
print("\n" + "="*50)
print("√âTAPE 4: Analyse des donn√©es t√©l√©charg√©es")
print("="*50)

# Variables de configuration
today_date = datetime.today().date().strftime('%Y-%m-%d')
start_date = pd.to_datetime('2025-01-01')
end_date = pd.to_datetime('2025-08-11')
base_path = r"C:\Users\Moise\Downloads\Call-App\data"

# Importation des donn√©es
try:
    print("üìä Chargement des fichiers de donn√©es...")
    
    # Import dial dataset
    Apel_ptme = pd.read_excel(f"{base_path}/Caris Health Agent - Femme PMTE  - APPELS PTME (created 2025-02-13) {today_date}.xlsx", parse_dates=True)
    Apel_oev = pd.read_excel(f"{base_path}/Caris Health Agent - Enfant - APPELS OEV (created 2025-01-08) {today_date}.xlsx", parse_dates=True)
    
    # Import visit dataset
    Visite_ptme = pd.read_excel(f"{base_path}/Caris Health Agent - Femme PMTE  - Visite PTME (created 2025-02-13) {today_date}.xlsx", parse_dates=True)
    Ration_ptme = pd.read_excel(f"{base_path}/Caris Health Agent - Femme PMTE  - Ration & Autres Visites (created 2025-02-18) {today_date}.xlsx", parse_dates=True)
    Ration_oev = pd.read_excel(f"{base_path}/Caris Health Agent - Enfant - Ration et autres visites (created 2022-08-29) {today_date}.xlsx", parse_dates=True)
    oev_visite = pd.read_excel(f"{base_path}/Caris Health Agent - Enfant - Visite Enfant (created 2025-07-30) {today_date}.xlsx", parse_dates=True)
    
    print("‚úÖ Tous les fichiers ont √©t√© charg√©s avec succ√®s!")
    print(f"üìà Nombre d'enregistrements:")
    print(f"   - Appels PTME: {len(Apel_ptme)}")
    print(f"   - Appels OEV: {len(Apel_oev)}")
    print(f"   - Visites PTME: {len(Visite_ptme)}")
    print(f"   - Rations PTME: {len(Ration_ptme)}")
    print(f"   - Rations OEV: {len(Ration_oev)}")
    print(f"   - Visites OEV: {len(oev_visite)}")
    
except FileNotFoundError as e:
    print(f"‚ùå Fichier non trouv√©: {e}")
    print("üí° V√©rifiez que le t√©l√©chargement s'est bien d√©roul√©")
    sys.exit(1)
except Exception as e:
    print(f"‚ùå Erreur lors du chargement des donn√©es: {e}")
    sys.exit(1)

print("\n" + "="*50)
print("ANALYSE TERMIN√âE AVEC SUCC√àS!")
print("="*50)
print("üéØ Les donn√©es sont maintenant pr√™tes pour l'analyse dans le notebook")
print("üìÅ R√©pertoire des donn√©es:", base_path)
print("üìÖ P√©riode d'analyse: {} √† {}".format(start_date.strftime('%Y-%m-%d'), end_date.strftime('%Y-%m-%d')))
