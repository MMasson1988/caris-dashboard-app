tmi.why_this_woman_does_not_belong_to_a_club,
CASE
WHEN tmi.why_this_woman_does_not_belong_to_a_club = 1 THEN 'N\ ’était pas au courant du club'
WHEN tmi.why_this_woman_does_not_belong_to_a_club = 2 THEN 'Distance/Proximité (clubs trop loin)'
WHEN tmi.why_this_woman_does_not_belong_to_a_club = 3 THEN 'Incompatibilité d\ ’horaire'
WHEN tmi.why_this_woman_does_not_belong_to_a_club = 4 THEN 'Raison économique'
WHEN tmi.why_this_woman_does_not_belong_to_a_club = 5 THEN 'Stigmatisation'
WHEN tmi.why_this_woman_does_not_belong_to_a_club = 6 THEN 'Dénie (n\ ’accepte pas son statut)'
WHEN tmi.why_this_woman_does_not_belong_to_a_club = 7 THEN 'Partenaire n’est pas au courant de son statut'
WHEN tmi.why_this_woman_does_not_belong_to_a_club = 8 THEN 'Autres'
ELSE '---'
END AS woman_does_not_belong_to_a_club_definition ,
tmi.this_woman_does_not_belong_to_a_club_reason_other
from
((SELECT
tmi.id_patient
FROM
tracking_pregnancy tp
LEFT JOIN tracking_motherbasicinfo tmi ON tmi.id_patient = tp.id_patient_mother
WHERE
(tp.dpa BETWEEN `start_date` AND `end_date`)
OR ((tp.ddr + INTERVAL 9 MONTH + INTERVAL 7 DAY) BETWEEN `start_date` AND `end_date`)
OR (tp.actual_delivery_date BETWEEN `start_date` AND `end_date`) OR (tp.created_at between `p_start` and `p_end`) OR (tmi.created_at between `p_start` and `p_end`))
UNION (SELECT
p.id AS id_patient
FROM
testing_mereenfant tme
LEFT JOIN patient p ON p.patient_code = CONCAT(tme.mother_city_code, '/', tme.mother_hospital_code, '/', tme.mother_code)
WHERE
tme.infant_dob BETWEEN `start_date` AND `end_date`) UNION (SELECT
id_patient_mother AS id_patient
FROM
tracking_children tc
LEFT JOIN tracking_motherbasicinfo tmi2 on tmi2.id_patient = tc.id_patient_mother
LEFT JOIN testing_mereenfant tm ON tm.id_patient = tc.id_patient_child
WHERE (tmi2.id is not null) AND
(tm.infant_dob BETWEEN `start_date` AND `end_date`)
OR (tc.dob BETWEEN `start_date` AND `end_date`))) a
left join tracking_motherbasicinfo tmi on a.id_patient = tmi.id_patient
left join club_patient cp on a.id_patient = cp.id_patient
left join (select distinct club.name as club_name, patient.id as id_patient_club, patient_code , club_session.date as club_session_date
from session
left join club_session on club_session.id=id_club_session
left join club on club.id=id_club
left join patient on patient.id=id_patient
where is_present=1 and club_type=1 and left(patient_code,8) is not null )info_club on info_club.id_patient_club = a.id_patient
LEFT JOIN
(SELECT
MAX(cs2.date) AS 'date', s2.id_patient
FROM
session s2
LEFT JOIN club_session cs2 ON cs2.id = s2.id_club_session
WHERE
s2.is_present = 1
GROUP BY s2.id_patient) b ON b.id_patient = a.id_patient
left join patient p on a.id_patient = p.id
group by patient_code"))
sql2=fetch(sql_eid_ptme,n=-1)
sql_eid_ptme_cc= dbSendQuery(
dbConnect(MySQL(), user='caris_readonly', password='longlivecaris!!', dbname='caris_db', host='caris.cwyvkxmtzny2.us-east-1.rds.amazonaws.com'),
gsubfn::fn$identity("SELECT
t0.is_present,
t0.club_motivation,
t0.next_club_date,
t0.patient_code,
t0.is_present AS is_patient_present_at_time_of_visit,
IF(t0.is_patient_consent = 0, 'no', 'yes') AS is_patient_consent
FROM
tracking_ptme_visit t0
inner join patient px on px.patient_code=t0.patient_code
INNER JOIN (SELECT
MAX(t.date_of_visit) AS max_date, t.patient_code
FROM
tracking_ptme_visit t
GROUP BY t.patient_code) b ON b.patient_code = t0.patient_code
AND t0.date_of_visit = b.max_date"))
sql_tracking_visit = fetch(sql_eid_ptme_cc, n=-1)
#  merge the two dataframes
sql2 = merge(sql2, sql_tracking_visit, by = "patient_code", all.x = TRUE)
sql2_ptme<-sql2%>%
rename('Code_mere'='patient_code')
#EID DATA
#The date (year) must be updated periodically (each fiscal year) at line 1238
#Setting the quarter
period = 'Q2'
sql1_eid<-data_eid%>%
rename('lab_code'='Site_or_lab_code')%>%
filter(Quarter %in% period)
#Joining the 2 dataframes
eid_ptme_club_df<-left_join(sql1_eid,sql2_ptme,by='Code_mere')%>%select(Patient_code,Network,Liaison_mere,in_club,Result,date_of_birth,date_blood_taken)
#Replacement
#in_club variable
eid_ptme_club_df$in_club[is.na(eid_ptme_club_df$in_club)]<-"---"
eid_ptme_club_df$in_club[eid_ptme_club_df$in_club=="yes"]<-"in_club"
eid_ptme_club_df$in_club[eid_ptme_club_df$in_club=="no"]<-"not_in_club"
#Result variable
eid_ptme_club_df$Result[eid_ptme_club_df$Result=="ADN VIH-1 Detècté"]<-"positif"
eid_ptme_club_df$Result[eid_ptme_club_df$Result=="ADN VIH-1 Non-Detècté"]<-"négatif"
#Function for age calculation in month
month_diff <- function(d) { lt <- as.POSIXlt(as.Date(d, origin="1900-01-01"));
lt$year*12 + lt$mon }
agecalc <- function(d1, d2) {month_diff(d2) - month_diff(d1) }
#Adding a new column: age
eid_ptme_club_df<-eid_ptme_club_df%>%
mutate(age=agecalc(as.Date(date_of_birth),as.Date(date_blood_taken)))
#Building the age groups for further plotting
setDT(eid_ptme_club_df)[age <=2, tranche_age := "0_2"]
eid_ptme_club_df[age >2 & age <=6, tranche_age := "3_6"]
eid_ptme_club_df[age >6 & age <=12, tranche_age := "7_12"]
eid_ptme_club_df[age >12, tranche_age := "outlier"]
eid_tx_pos<-sql1_eid%>%
group_by(Result)%>%
count()
n_total<-sum(eid_tx_pos$n)
if(nrow(gross1)==0){
print("Il n'y a pas d'activite")
}else{
#Bar chart
eid_tx_pos%>%
ggplot(aes(fill=Result, y=n, x=reorder(Result,n))) +
geom_bar(stat="identity",color="black",show.legend = FALSE) +
geom_label(fill="white",aes(label =paste0(round((n/n_total)*100,2),'%'), hjust = 0.5,vjust=0.5),color="black",
size=3.3,show.legend = F)+
scale_fill_viridis(discrete = T, option = "D",direction=-1) +
coord_flip(y=c(0,1.3*n_total))+
ggtitle(" ")+
labs(caption=paste("Data source: hivhaiti",sep = " / ", Sys.Date()))+
theme_bw()+
theme(
plot.title = element_text(color = "black", size = 13, family="cambria", face = "bold",hjust=0.5,vjust=0.8),
plot.caption = element_text(face="italic",size = 10),
axis.text.x = element_text(size = 12,family="Cambria"),
axis.title.y = element_text(size = 12,family = "Cambria"),
strip.text = element_text(size = 12))+
xlab("")+
ylab("")
}
eid_ptme_club_df%>%
select(tranche_age,in_club)%>%
group_by(tranche_age,in_club)%>%
count()%>%
ungroup()->eid_ptme_club_df1
if(nrow(eid_ptme_club_df1)==0){
print("Il n'y a pas d'activite")
}else{
eid_ptme_club_df1%>%
group_by(in_club)%>%
mutate(prop=n/sum(n))%>%
ggplot(aes(fill=tranche_age, y=n, x=reorder(in_club,n))) +
geom_bar(position="dodge", stat="identity",color="black") +
geom_text(aes(label = paste0(round(prop*100,2),"%")), fill="white",vjust=-0.8,hjust=0.5,
position = position_dodge(width = 0.9),size=3.3)+
scale_fill_viridis(option="D",discrete = T)+
coord_cartesian(ylim = c(0,max(eid_ptme_club_df1$n)+0.05*max(eid_ptme_club_df1$n)))+
ggtitle("") +
labs(caption=paste("Data Source: hivhaiti",sep = " / ",Sys.Date())) +
theme_bw()+
theme(
plot.title = element_text(color = "black", size = 14, family="Cambria",face = "bold",hjust = 0.5),
plot.caption = element_text(face="italic",size=10),
axis.text.x = element_text(size = 12,family="Cambria"),
axis.title.y = element_text(size = 12,family = "Cambria"),
strip.text = element_text(size = 12,family="Cambria"))+
xlab("")+
ylab("")
}
#Calculation for numbers embedded in text
testes_0_2<-eid_ptme_club_df1%>%
filter(tranche_age=="0_2")
testes_2_6<-eid_ptme_club_df1%>%
filter(tranche_age=="3_6")
testes_6_12<-eid_ptme_club_df1%>%
filter(tranche_age=="7_12")
#-----------------------------------------------------
mother_not_rec<-eid_ptme_club_df1%>%
filter(in_club=="---")
mother_club_rec<-eid_ptme_club_df1%>%
filter(in_club=="in_club")
mother_not_club_rec<-eid_ptme_club_df1%>%
filter(in_club=="not_in_club")
eid_ptme_club_df2<-eid_ptme_club_df%>%
filter(Liaison_mere=="no")%>%
mutate(groupe_age=ifelse(tranche_age=="0_2","0_2","3_12"))%>%
select(Network,groupe_age)%>%
group_by(Network,groupe_age)%>%
count()%>%
ungroup()
if(nrow(eid_ptme_club_df2)==0){
print("Il n'y a pas d'activite")
}else{
eid_ptme_club_df2%>%
group_by(Network)%>%
mutate(prop=n/sum(n))%>%
ggplot(aes(fill=groupe_age, y=n, x=reorder(Network,n))) +
geom_bar(position="dodge", stat="identity",color="black") +
geom_text(aes(label = n), fill="white",vjust=0.5,hjust=-0.3,
position = position_dodge(width = 0.9),size=3.3)+
scale_fill_manual(values=c("#00543E", "#CAC7A7")) +
coord_flip(y = c(0,max(eid_ptme_club_df2$n)+0.1*max(eid_ptme_club_df2$n)))+
ggtitle("") +
labs(caption=paste("Data Source: hivhaiti",sep = " / ",Sys.Date())) +
theme_bw()+
theme(
plot.title = element_text(color = "black", size = 14, family="Cambria",face = "bold",hjust = 0.5),
plot.caption = element_text(face="italic",size=10),
axis.text.x = element_text(size = 12,family="Cambria"),
axis.title.y = element_text(size = 12,family = "Cambria"),
strip.text = element_text(size = 12,family="Cambria"))+
xlab("")+
ylab("")
}
eid_ptme_club_df3<-eid_ptme_club_df%>%
select(in_club,Result)%>%
group_by(in_club,Result)%>%
count()%>%
ungroup()
if(nrow(eid_ptme_club_df3)==0){
print("Il n'y a pas d'activite")
}else{
eid_ptme_club_df3%>%
group_by(in_club)%>%
mutate(prop=n/sum(n))%>%
ggplot(aes(fill=Result, y=n, x=reorder(in_club,n))) +
geom_bar(position="dodge", stat="identity",color="black") +
geom_text(aes(label = paste0(round(prop*100,2),"%")), fill="white",vjust=-0.5,hjust=0.5,
position = position_dodge(width = 0.9),size=3.3)+
scale_fill_viridis(option="E",discrete = T)+
coord_cartesian(ylim = c(0,max(eid_ptme_club_df3$n)+0.1*max(eid_ptme_club_df3$n)))+
ggtitle("") +
labs(caption=paste("Data Source: hivhaiti",sep = " / ",Sys.Date())) +
theme_bw()+
theme(
plot.title = element_text(color = "black", size = 14, family="Cambria",face = "bold",hjust = 0.5),
plot.caption = element_text(face="italic",size=10),
axis.text.x = element_text(size = 12,family="Cambria"),
axis.title.y = element_text(size = 12,family = "Cambria"),
strip.text = element_text(size = 12,family="Cambria"))+
xlab("")+
ylab("")
}
#Calculation for numbers embedded in text
eid_ptme_res_df_neg<-eid_ptme_club_df%>%
select(Result)%>%
group_by(Result)%>%
count()%>%
filter(Result %in% "négatif")
eid_ptme_res_df_pos<-eid_ptme_club_df%>%
select(Result)%>%
group_by(Result)%>%
count()%>%
filter(Result %in% "positif")
#---------------------------------------------------------------------
eid_ptme_res_df_neg_not_hiv<-eid_ptme_club_df%>%
filter(in_club %in% "---")%>%
select(Result)%>%
group_by(Result)%>%
count()%>%
filter(Result %in% "négatif")
eid_ptme_res_df_neg_club<-eid_ptme_club_df%>%
filter(in_club %in% "in_club")%>%
select(Result)%>%
group_by(Result)%>%
count()%>%
filter(Result %in% "négatif")
eid_ptme_res_df_neg_not_club<-eid_ptme_club_df%>%
filter(in_club %in% "not_in_club")%>%
select(Result)%>%
group_by(Result)%>%
count()%>%
filter(Result %in% "négatif")
###############################
eid_ptme_res_df_pos_not_hiv<-eid_ptme_club_df%>%
filter(in_club %in% "---")%>%
select(Result)%>%
group_by(Result)%>%
count()%>%
filter(Result %in% "positif")
eid_ptme_res_df_pos_club<-eid_ptme_club_df%>%
filter(in_club %in% "in_club")%>%
select(Result)%>%
group_by(Result)%>%
count()%>%
filter(Result %in% "positif")
eid_ptme_res_df_pos_not_club<-eid_ptme_club_df%>%
filter(in_club %in% "not_in_club")%>%
select(Result)%>%
group_by(Result)%>%
count()%>%
filter(Result %in% "positif")
eid_ptme_club_df4<-eid_ptme_club_df%>%
filter(Liaison_mere=="no")%>%
select(Network,Result)%>%
filter(Result %in% c("positif","négatif"))%>%
group_by(Network,Result)%>%
count()%>%
ungroup()
if(nrow(eid_ptme_club_df4)==0){
print("Il n'y a pas d'activite")
}else{
eid_ptme_club_df4%>%
group_by(Network)%>%
mutate(prop=n/sum(n))%>%
ggplot(aes(fill=Result, y=n, x=reorder(Network,n))) +
geom_bar(position="dodge", stat="identity",color="black") +
geom_text(aes(label = n), fill="white",vjust=0.5,hjust=-0.3,
position = position_dodge(width = 0.9),size=3.3)+
scale_fill_manual(values=c("#00AFBB", "#CAC7A7")) +
coord_flip(y= c(0,max(eid_ptme_club_df4$n)+0.1*max(eid_ptme_club_df4$n)))+
ggtitle("") +
labs(caption=paste("Data Source: hivhaiti",sep = " / ",Sys.Date())) +
theme_bw()+
theme(
plot.title = element_text(color = "black", size = 14, family="Cambria",face = "bold",hjust = 0.5),
plot.caption = element_text(face="italic",size=10),
axis.text.x = element_text(size = 12,family="Cambria"),
axis.title.y = element_text(size = 12,family = "Cambria"),
strip.text = element_text(size = 12,family="Cambria"))+
xlab("")+
ylab("")
}
reticulate::repl_python()
start_date0=as.Date(py$py_start_date)
start_date<-sQuote(start_date0,options(useFancyQuotes = TRUE))
end_date0=as.Date(py$py_end_date)
end_date<-sQuote(end_date0,options(useFancyQuotes = TRUE))
all_cons <- dbListConnections(MySQL())
for(con in all_cons) {
dbDisconnect(con)
}
conn= dbConnect(MySQL(), user='caris_readonly', password='longlivecaris!!', dbname='caris_db', host='caris.cwyvkxmtzny2.us-east-1.rds.amazonaws.com')
sans_pcr=dbSendQuery(
conn,
gsubfn::fn$identity("
SELECT
not_tested.*,
IF(tmp.took_viral_load_test = 1,
'Yes',
'No') AS took_viral_load_test,
tmp.viral_load_count AS viral_load,
tmp.viral_load_date,
tmp.viral_load_collection_date,
tmp.viral_load_indetectable,
tpy.ddr,
tpy.dpa,
CASE
WHEN tpy.infant_has_no_pcr_test = 1 THEN 'infant has pcr test'
WHEN tpy.infant_has_no_pcr_test = 2 THEN 'infant has no pcr test'
ELSE 'N/A'
END AS infant_has_no_pcr_test,
CASE
WHEN tpy.no_pcr_reason = 1 THEN '1. Nourrisson non encore éligible'
WHEN tpy.no_pcr_reason = 2 THEN '2. Mère en dénie'
WHEN tpy.no_pcr_reason = 3 THEN '3. Mère perdue de vue'
WHEN tpy.no_pcr_reason = 4 THEN '4.Peur de résultat positif'
WHEN tpy.no_pcr_reason = 5 THEN '5. Femme non suivi dans ce site ( accouchement ponctuel)'
WHEN tpy.no_pcr_reason = 6 THEN '6. Moyens de contact incomplets ou faux'
WHEN tpy.no_pcr_reason = 7 THEN '7.Migration interne ou externe (A préciser)'
WHEN tpy.no_pcr_reason = 8 THEN '8. PCR fait dans un autre site. Code à lier'
WHEN tpy.no_pcr_reason = 9 THEN '9. Matériels PCR non disponibles dans le site'
WHEN tpy.no_pcr_reason = 10 THEN '10. Stigmatisation '
WHEN tpy.no_pcr_reason = 11 THEN '11.Enfant Decede'
WHEN tpy.no_pcr_reason = 12 THEN '12.Partenaire non au courant de son statut'
WHEN tpy.no_pcr_reason = 13 THEN '13. Habite dans une zone rouge'
ELSE 'N/A'
END AS no_pcr_reason,
tpy.migration_zone,
tm.infant_dob,
pt1.patient_code,
tpv.delivery_date AS delivery_date_commcare,
GREATEST(COALESCE(not_tested.actual_delivery_date, 0),
COALESCE(tpv.delivery_date, 0)) AS delivery_date_merge
FROM
((SELECT
tmi.id_patient
FROM
tracking_pregnancy tp
LEFT JOIN tracking_motherbasicinfo tmi ON tmi.id_patient = tp.id_patient_mother
WHERE
(tp.dpa BETWEEN `start_date` AND `end_date`)
OR ((tp.ddr + INTERVAL 9 MONTH + INTERVAL 7 DAY) BETWEEN `start_date` AND `end_date`)
OR (tp.actual_delivery_date BETWEEN `start_date` AND `end_date`)
OR (tp.created_at BETWEEN `start_date` AND `end_date`)
OR (tmi.created_at BETWEEN `start_date` AND `end_date`)) UNION (SELECT
p.id AS id_patient
FROM
testing_mereenfant tme
LEFT JOIN patient p ON p.patient_code = CONCAT(tme.mother_city_code, '/', tme.mother_hospital_code, '/', tme.mother_code)
WHERE
tme.infant_dob BETWEEN `start_date` AND `end_date`) UNION (SELECT
id_patient_mother AS id_patient
FROM
tracking_children tc
LEFT JOIN tracking_motherbasicinfo tmi2 ON tmi2.id_patient = tc.id_patient_mother
LEFT JOIN testing_mereenfant tm ON tm.id_patient = tc.id_patient_child
WHERE
(tmi2.id IS NOT NULL)
AND (tm.infant_dob BETWEEN `start_date` AND `end_date`)
OR (tc.dob BETWEEN `start_date` AND `end_date`))) all_ptme
LEFT JOIN
tracking_motherbasicinfo tmi ON all_ptme.id_patient = tmi.id_patient
LEFT JOIN
patient pt ON pt.id = all_ptme.id_patient
LEFT JOIN
tracking_pregnancy tpy ON tpy.id_patient_mother = all_ptme.id_patient
LEFT JOIN
tracking_motherfollowup tmp ON tmp.id_patient = all_ptme.id_patient
LEFT JOIN
testing_mereenfant tm ON UPPER(CONCAT(tm.mother_city_code,
'/',
tm.mother_hospital_code,
'/',
tm.mother_code)) = pt.patient_code
LEFT JOIN
patient pt1 ON pt1.id = tm.id_patient
LEFT JOIN
tracking_ptme_visit tpv ON tpv.patient_code = UPPER(CONCAT(tm.mother_city_code,
'/',
tm.mother_hospital_code,
'/',
tm.mother_code))
RIGHT JOIN
(SELECT
CONCAT(p.city_code, '/', p.hospital_code) AS mother_site,
p.patient_code AS mother_code,
actual_delivery_date,
IF(termination_of_pregnancy = 1, 'Yes', 'Non') AS termination_of_pregnancy,
(CASE
WHEN termination_of_pregnancy_reason = 1 THEN 'Miscarriage'
WHEN termination_of_pregnancy_reason = 2 THEN 'DeathAfterDelivery'
ELSE 'Unknown'
END) AS termination_of_pregnancy_reason,
IF(tmb.is_dead = 1, 'Yes', 'No') AS is_dead,
tmb.death_date AS death_date,
tmb.first_name AS first_name,
tmb.last_name AS last_name,
tmb.telephone AS telephone,
tmb.telephone2 AS telephone2,
tmb.address AS adresse,
IF(tmb.patient_doesnot_accept_visits = 1, 'Not Accept visit', 'Accept') AS Patient_doesnot_accept_visits,
IF(tmb.is_address_incorrect = 1, 'Fausse Adresse', 'Adresse Correcte') AS Fausse_Adresse,
IF(tmb.is_abandoned = 1, 'Abandonee', 'Non') AS Abandon,
tmb.abandoned_date AS Date_abandon,
(CASE
WHEN abandoned_reason = 1 THEN 'Parents refused to cooperate'
WHEN abandoned_reason = 2 THEN 'Family moved city'
WHEN abandoned_reason = 3 THEN 'No contact telephone or address'
WHEN abandoned_reason = 4 THEN 'Transfer to non Caris site'
ELSE '0'
END) AS Abandon_reason,
tmb.abandoned_reason_other_describe AS abandoned_reason_other_describe,
ts.date_blood_taken,
ts.pcr_result,
ts.pcr_result_date,
ts.which_pcr
FROM
tracking_pregnancy tp
LEFT JOIN patient p ON p.id = id_patient_mother
LEFT JOIN testing_mereenfant tm ON UPPER(CONCAT(tm.mother_city_code, '/', tm.mother_hospital_code, '/', tm.mother_code)) = p.patient_code or tm.mother_code=p.patient_code
LEFT JOIN testing_specimen ts ON ts.id_patient = tm.id_patient
LEFT JOIN tracking_motherbasicinfo tmb ON tp.id_patient_mother = tmb.id_patient
WHERE
actual_delivery_date BETWEEN `start_date` AND `end_date`
AND ts.id IS NULL
GROUP BY id_patient_mother) not_tested ON pt.patient_code = not_tested.mother_code
GROUP BY not_tested.mother_code
ORDER BY pt.patient_code
LIMIT 100000;"
))
sans_pcr=fetch(sans_pcr,n=-1)
sans_pcr0=sans_pcr%>%
filter(termination_of_pregnancy=="Non" & is_dead=="No" & Abandon=="Non")%>%
rename(site_code= mother_site)
#sans_pcr0=left_join(sans_pcr0, lookup_coord_site, by = 'site_code')
reticulate::repl_python()
sans_pcr0=py$sans_pcr1
if(nrow(sans_pcr0)==0){
print("Il n'y a pas d'activite")
}else{
datatable(sans_pcr0, filter = 'bottom', extensions = 'Buttons',
options = list(dom = 'Bfrtip',width="120px",
columnDefs = list(list(className = 'dt-center', targets = "_all")),
initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#0B1E2A', 'color': '#fff'});",
"}"),
buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),pageLength = 4))
}
lapply(dbListConnections(MySQL()), dbDisconnect)
reticulate::repl_python()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
reticulate::repl_python()
rgarden_sans_comptage <- py$garden_sans_comptage
DT::datatable(rgarden_sans_comptage, extensions = 'Buttons', filter = 'bottom',
options = list(dom = 'Bfrtip',
columnDefs = list(list(className = 'dt-center', targets = "_all")),
initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#3E4827', 'color': '#fff'});",
"}"),
buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),
pageLength = 6))
reticulate::repl_python()
rgarden_last_more_year <- py$garden_last_more_year
DT::datatable(rgarden_last_more_year, extensions = 'Buttons', filter = 'bottom',
options = list(dom = 'Bfrtip',
columnDefs = list(list(className = 'dt-center', targets = "_all")),
initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#3E4827', 'color': '#fff'});",
"}"),
buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),
pageLength = 6))
